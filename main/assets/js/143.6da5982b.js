(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{713:function(e,t,s){"use strict";s.r(t);var a=s(1),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"adr-adr-number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adr-adr-number"}},[e._v("#")]),e._v(" ADR {ADR-NUMBER}:")]),e._v(" "),s("h2",{attrs:{id:"changelog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#changelog"}},[e._v("#")]),e._v(" Changelog")]),e._v(" "),s("ul",[s("li",[e._v("{date}:")])]),e._v(" "),s("h2",{attrs:{id:"status"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#status"}},[e._v("#")]),e._v(" Status")]),e._v(" "),s("blockquote",[s("p",[e._v('An architecture decision is considered "proposed" when a PR containing the ADR\nis submitted. When merged, an ADR must have a status associated with it, which\nmust be one of: "Accepted", "Rejected", "Deprecated" or "Superseded".')]),e._v(" "),s("p",[e._v("An accepted ADR's implementation status must be tracked via a tracking issue,\nmilestone or project board (only one of these is necessary). For example:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("Accepted\n\n[Tracking issue](https://github.com/tendermint/tendermint/issues/123)\n[Milestone](https://github.com/tendermint/tendermint/milestones/123)\n[Project board](https://github.com/orgs/tendermint/projects/123)\n")])])]),s("p",[e._v("Rejected ADRs are captured as a record of recommendations that we specifically\ndo not (and possibly never) want to implement. The ADR itself must, for\nposterity, include reasoning as to why it was rejected.")]),e._v(" "),s("p",[e._v('If an ADR is deprecated, simply write "Deprecated" in this section. If an ADR\nis superseded by one or more other ADRs, provide local a reference to those\nADRs, e.g.:')]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("Superseded by [ADR 123](./adr-123.md)\n")])])])]),e._v(" "),s("p",[e._v("Accepted | Rejected | Deprecated | Superseded by")]),e._v(" "),s("h2",{attrs:{id:"context"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[e._v("#")]),e._v(" Context")]),e._v(" "),s("blockquote",[s("p",[e._v("This section contains all the context one needs to understand the current state,\nand why there is a problem. It should be as succinct as possible and introduce\nthe high level idea behind the solution.")])]),e._v(" "),s("h2",{attrs:{id:"alternative-approaches"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#alternative-approaches"}},[e._v("#")]),e._v(" Alternative Approaches")]),e._v(" "),s("blockquote",[s("p",[e._v("This section contains information around alternative options that are considered\nbefore making a decision. It should contain a explanation on why the alternative\napproach(es) were not chosen.")])]),e._v(" "),s("h2",{attrs:{id:"decision"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#decision"}},[e._v("#")]),e._v(" Decision")]),e._v(" "),s("blockquote",[s("p",[e._v("This section records the decision that was made.\nIt is best to record as much info as possible from the discussion that happened.\nThis aids in not having to go back to the Pull Request to get the needed information.")])]),e._v(" "),s("h2",{attrs:{id:"detailed-design"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#detailed-design"}},[e._v("#")]),e._v(" Detailed Design")]),e._v(" "),s("blockquote",[s("p",[e._v("This section does not need to be filled in at the start of the ADR, but must\nbe completed prior to the merging of the implementation.")]),e._v(" "),s("p",[e._v("Here are some common questions that get answered as part of the detailed design:")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("What are the user requirements?")])]),e._v(" "),s("li",[s("p",[e._v("What systems will be affected?")])]),e._v(" "),s("li",[s("p",[e._v("What new data structures are needed, what data structures will be changed?")])]),e._v(" "),s("li",[s("p",[e._v("What new APIs will be needed, what APIs will be changed?")])]),e._v(" "),s("li",[s("p",[e._v("What are the efficiency considerations (time/space)?")])]),e._v(" "),s("li",[s("p",[e._v("What are the expected access patterns (load/throughput)?")])]),e._v(" "),s("li",[s("p",[e._v("Are there any logging, monitoring or observability needs?")])]),e._v(" "),s("li",[s("p",[e._v("Are there any security considerations?")])]),e._v(" "),s("li",[s("p",[e._v("Are there any privacy considerations?")])]),e._v(" "),s("li",[s("p",[e._v("How will the changes be tested?")])]),e._v(" "),s("li",[s("p",[e._v("If the change is large, how will the changes be broken up for ease of review?")])]),e._v(" "),s("li",[s("p",[e._v("Will these changes require a breaking (major) release?")])]),e._v(" "),s("li",[s("p",[e._v("Does this change require coordination with the SDK or other?")])])])]),e._v(" "),s("h2",{attrs:{id:"consequences"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#consequences"}},[e._v("#")]),e._v(" Consequences")]),e._v(" "),s("blockquote",[s("p",[e._v('This section describes the consequences, after applying the decision. All\nconsequences should be summarized here, not just the "positive" ones.')])]),e._v(" "),s("h3",{attrs:{id:"positive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#positive"}},[e._v("#")]),e._v(" Positive")]),e._v(" "),s("h3",{attrs:{id:"negative"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#negative"}},[e._v("#")]),e._v(" Negative")]),e._v(" "),s("h3",{attrs:{id:"neutral"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#neutral"}},[e._v("#")]),e._v(" Neutral")]),e._v(" "),s("h2",{attrs:{id:"references"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[e._v("#")]),e._v(" References")]),e._v(" "),s("blockquote",[s("p",[e._v("Are there any relevant PR comments, issues that led up to this, or articles\nreferenced for why we made the given design choice? If so link them here!")])]),e._v(" "),s("ul",[s("li")])])}),[],!1,null,null,null);t.default=n.exports}}]);