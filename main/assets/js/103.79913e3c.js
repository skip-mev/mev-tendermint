(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{668:function(g,C,I){"use strict";I.r(C);var A=I(1),d=Object(A.a)({},(function(){var g=this,C=g.$createElement,I=g._self._c||C;return I("ContentSlotsDistributor",{attrs:{"slot-key":g.$parent.slotKey}},[I("h1",{attrs:{id:"adr-030-consensus-refactor"}},[I("a",{staticClass:"header-anchor",attrs:{href:"#adr-030-consensus-refactor"}},[g._v("#")]),g._v(" ADR 030: Consensus Refactor")]),g._v(" "),I("h2",{attrs:{id:"context"}},[I("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[g._v("#")]),g._v(" Context")]),g._v(" "),I("p",[g._v("One of the biggest challenges this project faces is to proof that the\nimplementations of the specifications are correct, much like we strive to\nformaly verify our alogrithms and protocols we should work towards high\nconfidence about the correctness of our program code. One of those is the core\nof Tendermint - Consensus - which currently resides in the "),I("code",[g._v("consensus")]),g._v(" package.\nOver time there has been high friction making changes to the package due to the\nalgorithm being scattered in a side-effectful container (the current\n"),I("code",[g._v("ConsensusState")]),g._v("). In order to test the algorithm a large object-graph needs to\nbe set up and even than the non-deterministic parts of the container makes will\nprevent high certainty. Where ideally we have a 1-to-1 representation of the\n"),I("a",{attrs:{href:"https://github.com/tendermint/spec",target:"_blank",rel:"noopener noreferrer"}},[g._v("spec"),I("OutboundLink")],1),g._v(", ready and easy to test for domain\nexperts.")]),g._v(" "),I("p",[g._v("Addresses:")]),g._v(" "),I("ul",[I("li",[I("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/1495",target:"_blank",rel:"noopener noreferrer"}},[g._v("#1495"),I("OutboundLink")],1)]),g._v(" "),I("li",[I("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/1692",target:"_blank",rel:"noopener noreferrer"}},[g._v("#1692"),I("OutboundLink")],1)])]),g._v(" "),I("h2",{attrs:{id:"decision"}},[I("a",{staticClass:"header-anchor",attrs:{href:"#decision"}},[g._v("#")]),g._v(" Decision")]),g._v(" "),I("p",[g._v("To remedy these issues we plan a gradual, non-invasive refactoring of the\n"),I("code",[g._v("consensus")]),g._v(" package. Starting of by isolating the consensus alogrithm into\na pure function and a finite state machine to address the most pressuring issue\nof lack of confidence. Doing so while leaving the rest of the package in tact\nand have follow-up optional changes to improve the sepration of concerns.")]),g._v(" "),I("h3",{attrs:{id:"implementation-changes"}},[I("a",{staticClass:"header-anchor",attrs:{href:"#implementation-changes"}},[g._v("#")]),g._v(" Implementation changes")]),g._v(" "),I("p",[g._v("The core of Consensus can be modelled as a function with clear defined inputs:")]),g._v(" "),I("ul",[I("li",[I("code",[g._v("State")]),g._v(" - data container for current round, height, etc.")]),g._v(" "),I("li",[I("code",[g._v("Event")]),g._v("- significant events in the network")])]),g._v(" "),I("p",[g._v("producing clear outputs;")]),g._v(" "),I("ul",[I("li",[I("code",[g._v("State")]),g._v(" - updated input")]),g._v(" "),I("li",[I("code",[g._v("Message")]),g._v(" - signal what actions to perform")])]),g._v(" "),I("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"dHlwZSBFdmVudCBpbnQKCmNvbnN0ICgKCUV2ZW50VW5rbm93biBFdmVudCA9IGlvdGEKCUV2ZW50UHJvcG9zYWwKCU1ham9yaXR5MjNQcmV2b3Rlc0Jsb2NrCglNYWpvcml0eTIzUHJlY29tbWl0QmxvY2sKCU1ham9yaXR5MjNQcmV2b3Rlc0FueQoJTWFqb3JpdHkyM1ByZWNvbW1pdEFueQoJVGltZW91dE5ld1JvdW5kCglUaW1lb3V0UHJvcG9zZQoJVGltZW91dFByZXZvdGVzCglUaW1lb3V0UHJlY29tbWl0CikKCnR5cGUgTWVzc2FnZSBpbnQKCmNvbnN0ICgKCU1lZXNhZ2VVbmtub3duIE1lc3NhZ2UgPSBpb3RhCglNZXNzYWdlUHJvcG9zYWwKCU1lc3NhZ2VWb3RlcwoJTWVzc2FnZURlY2lzaW9uCikKCnR5cGUgU3RhdGUgc3RydWN0IHsKCWhlaWdodCAgICAgIHVpbnQ2NAoJcm91bmQgICAgICAgdWludDY0CglzdGVwICAgICAgICB1aW50NjQKCWxvY2tlZFZhbHVlIGludGVyZmFjZXt9IC8vIFRPRE86IERlZmluZSBwcm9wZXIgdHlwZS4KCWxvY2tlZFJvdW5kIGludGVyZmFjZXt9IC8vIFRPRE86IERlZmluZSBwcm9wZXIgdHlwZS4KCXZhbGlkVmFsdWUgIGludGVyZmFjZXt9IC8vIFRPRE86IERlZmluZSBwcm9wZXIgdHlwZS4KCXZhbGlkUm91bmQgIGludGVyZmFjZXt9IC8vIFRPRE86IERlZmluZSBwcm9wZXIgdHlwZS4KCS8vIEZyb20gdGhlIG9yaWdpbmFsIG5vdGVzOiB2YWxpZCh2KQoJdmFsaWQgICAgICAgaW50ZXJmYWNle30gLy8gVE9ETzogRGVmaW5lIHByb3BlciB0eXBlLgoJLy8gRnJvbSB0aGUgb3JpZ2luYWwgbm90ZXM6IHByb3Bvc2VyKGgsIHIpCglwcm9wb3NlciAgICBpbnRlcmZhY2V7fSAvLyBUT0RPOiBEZWZpbmUgcHJvcGVyIHR5cGUuCn0KCmZ1bmMgQ29uc2Vuc3VzKEV2ZW50LCBTdGF0ZSkgKFN0YXRlLCBNZXNzYWdlKSB7CgkvLyBDb25zb2xpZGF0ZSBpbXBsZW1lbnRhdGlvbi4KfQo="}}),g._v(" "),I("p",[g._v("Tracking of relevant information to feed "),I("code",[g._v("Event")]),g._v(" into the function and act on\nthe output is left to the "),I("code",[g._v("ConsensusExecutor")]),g._v(" (formerly "),I("code",[g._v("ConsensusState")]),g._v(").")]),g._v(" "),I("p",[g._v("Benefits for testing surfacing nicely as testing for a sequence of events\nagainst algorithm could be as simple as the following example:")]),g._v(" "),I("tm-code-block",{staticClass:"codeblock",attrs:{language:" go",base64:"ZnVuYyBUZXN0Q29uc2Vuc3VzWFhYKHQgKnRlc3RpbmcuVCkgewoJdHlwZSBleHBlY3RlZCBzdHJ1Y3QgewoJCW1lc3NhZ2UgTWVzc2FnZQoJCXN0YXRlICAgU3RhdGUKCX0KCgkvLyBTZXR1cCBvcmRlciBvZiBldmVudHMsIGluaXRpYWwgc3RhdGUgYW5kIGV4cGVjdGF0aW9uLgoJdmFyICgKCQlldmVudHMgPSBbXXN0cnVjdCB7CgkJCWV2ZW50IEV2ZW50CgkJCXdhbnQgIGV4cGVjdGVkCgkJfXsKCQkvLyAuLi4KCQl9CgkJc3RhdGUgPSBTdGF0ZXsKCQkvLyAuLi4KCQl9CgkpCgoJZm9yIF8sIGUgOj0gcmFuZ2UgZXZlbnRzIHsKCQlzYXRlLCBtc2cgPSBDb25zZW5zdXMoZS5ldmVudCwgc3RhdGUpCgoJCS8vIFRlc3QgbWVzc2FnZSBleHBlY3RhdGlvbi4KCQlpZiBtc2cgIT0gZS53YW50Lm1lc3NhZ2UgewoJCQl0LkZhdGFsZigmcXVvdDtoYXZlICV2LCB3YW50ICV2JnF1b3Q7LCBtc2csIGUud2FudC5tZXNzYWdlKQoJCX0KCgkJLy8gVGVzdCBzdGF0ZSBleHBlY3RhdGlvbi4KCQlpZiAhcmVmbGVjdC5EZWVwRXF1YWwoc3RhdGUsIGUud2FudC5zdGF0ZSkgewoJCQl0LkZhdGFsZigmcXVvdDtoYXZlICV2LCB3YW50ICV2JnF1b3Q7LCBzdGF0ZSwgZS53YW50LnN0YXRlKQoJCX0KCX0KfQo="}}),g._v(" "),I("h2",{attrs:{id:"consensus-executor"}},[I("a",{staticClass:"header-anchor",attrs:{href:"#consensus-executor"}},[g._v("#")]),g._v(" Consensus Executor")]),g._v(" "),I("h2",{attrs:{id:"consensus-core"}},[I("a",{staticClass:"header-anchor",attrs:{href:"#consensus-core"}},[g._v("#")]),g._v(" Consensus Core")]),g._v(" "),I("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:""}}),g._v(" "),I("h3",{attrs:{id:"implementation-roadmap"}},[I("a",{staticClass:"header-anchor",attrs:{href:"#implementation-roadmap"}},[g._v("#")]),g._v(" Implementation roadmap")]),g._v(" "),I("ul",[I("li",[g._v("implement proposed implementation")]),g._v(" "),I("li",[g._v("replace currently scattered calls in "),I("code",[g._v("ConsensusState")]),g._v(" with calls to the new\n"),I("code",[g._v("Consensus")]),g._v(" function")]),g._v(" "),I("li",[g._v("rename "),I("code",[g._v("ConsensusState")]),g._v(" to "),I("code",[g._v("ConsensusExecutor")]),g._v(" to avoid confusion")]),g._v(" "),I("li",[g._v("propose design for improved separation and clear information flow between\n"),I("code",[g._v("ConsensusExecutor")]),g._v(" and "),I("code",[g._v("ConsensusReactor")])])]),g._v(" "),I("h2",{attrs:{id:"status"}},[I("a",{staticClass:"header-anchor",attrs:{href:"#status"}},[g._v("#")]),g._v(" Status")]),g._v(" "),I("p",[g._v("Draft.")]),g._v(" "),I("h2",{attrs:{id:"consequences"}},[I("a",{staticClass:"header-anchor",attrs:{href:"#consequences"}},[g._v("#")]),g._v(" Consequences")]),g._v(" "),I("h3",{attrs:{id:"positive"}},[I("a",{staticClass:"header-anchor",attrs:{href:"#positive"}},[g._v("#")]),g._v(" Positive")]),g._v(" "),I("ul",[I("li",[g._v("isolated implementation of the algorithm")]),g._v(" "),I("li",[g._v("improved testability - simpler to proof correctness")]),g._v(" "),I("li",[g._v("clearer separation of concerns - easier to reason")])]),g._v(" "),I("h3",{attrs:{id:"negative"}},[I("a",{staticClass:"header-anchor",attrs:{href:"#negative"}},[g._v("#")]),g._v(" Negative")]),g._v(" "),I("h3",{attrs:{id:"neutral"}},[I("a",{staticClass:"header-anchor",attrs:{href:"#neutral"}},[g._v("#")]),g._v(" Neutral")])],1)}),[],!1,null,null,null);C.default=d.exports}}]);